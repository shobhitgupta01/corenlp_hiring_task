{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanisha\\\\Documents\\\\corenlp_hiring_task\\\\graphs\\\\src\\\\index.js\";\n\n/************************************************************************************************************************\r\n * Project  : Plot graph by getting data through Flask API\r\n * Author   : Shobhit Gupta\r\n * Date     : 1st May 2020\r\n ************************************************************************************************************************/\n// importing the libraries\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport axios from 'axios'; // setting up the chart options\n// const options = {\n//     chart: {\n//         type: 'bar'\n//     },\n//     title: {\n//         text: 'Historic World Population by Region'\n//     },\n//     subtitle: {\n//         text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\n//     },\n//     xAxis: {\n//         categories: graph_data.labels,//['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\n//         title: {\n//             text: null\n//         }\n//     }, \n//     yAxis: {\n//         min: 0,\n//         title: {\n//             text: 'Population (millions)',\n//             align: 'high'\n//         },\n//         labels: {\n//             overflow: 'justify'\n//         }\n//     },\n//     tooltip: {\n//         valueSuffix: ' millions'\n//     },\n//     plotOptions: {\n//         bar: {\n//             dataLabels: {\n//                 enabled: true\n//             }\n//         }\n//     },\n//     legend: {\n//         layout: 'vertical',\n//         align: 'right',\n//         verticalAlign: 'top',\n//         x: -40,\n//         y: 80,\n//         floating: true,\n//         borderWidth: 1,\n//         backgroundColor:\n//             Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\n//         shadow: true\n//     },\n//     credits: {\n//         enabled: false\n//     },\n//     series: [{\n//         name: 'Year 1800',\n//         data: graph_data.counts//[107, 31, 635, 203, 2]\n//     }]\n// };\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Data: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:2010/get_data`).then(res => {\n      console.log(res.data);\n      this.setState({\n        Data: {\n          chart: {\n            type: 'bar'\n          },\n          title: {\n            text: 'Historic World Population by Region'\n          },\n          subtitle: {\n            text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\n          },\n          xAxis: {\n            categories: res.data.labels,\n            //['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\n            title: {\n              text: null\n            }\n          },\n          yAxis: {\n            min: 0,\n            title: {\n              text: 'Population (millions)',\n              align: 'high'\n            },\n            labels: {\n              overflow: 'justify'\n            }\n          },\n          tooltip: {\n            valueSuffix: ' millions'\n          },\n          plotOptions: {\n            bar: {\n              dataLabels: {\n                enabled: true\n              }\n            }\n          },\n          legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'top',\n            x: -40,\n            y: 80,\n            floating: true,\n            borderWidth: 1,\n            backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\n            shadow: true\n          },\n          credits: {\n            enabled: false\n          },\n          series: [{\n            name: 'Year 1800',\n            data: res.data.counts //[107, 31, 635, 203, 2]\n\n          }]\n        }\n      });\n    });\n  } // end of componentMount\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \" This is a chart\"), /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} //   const App = () => (\n//     <div>\n//       <HighchartsReact highcharts={Highcharts} options={options} />\n//     </div>\n//   );\n\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Tanisha/Documents/corenlp_hiring_task/graphs/src/index.js"],"names":["React","render","Highcharts","HighchartsReact","axios","App","Component","state","Data","componentDidMount","get","then","res","console","log","data","setState","chart","type","title","text","subtitle","xAxis","categories","labels","yAxis","min","align","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","legend","layout","verticalAlign","x","y","floating","borderWidth","backgroundColor","defaultOptions","shadow","credits","series","name","counts","document","getElementById"],"mappings":"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","sourcesContent":["/************************************************************************************************************************\r\n * Project  : Plot graph by getting data through Flask API\r\n * Author   : Shobhit Gupta\r\n * Date     : 1st May 2020\r\n ************************************************************************************************************************/\r\n\r\n // importing the libraries\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport axios from 'axios';\r\n\r\n// setting up the chart options\r\n// const options = {\r\n//     chart: {\r\n//         type: 'bar'\r\n//     },\r\n//     title: {\r\n//         text: 'Historic World Population by Region'\r\n//     },\r\n//     subtitle: {\r\n//         text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\r\n//     },\r\n//     xAxis: {\r\n//         categories: graph_data.labels,//['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\r\n//         title: {\r\n//             text: null\r\n//         }\r\n//     }, \r\n//     yAxis: {\r\n//         min: 0,\r\n//         title: {\r\n//             text: 'Population (millions)',\r\n//             align: 'high'\r\n//         },\r\n//         labels: {\r\n//             overflow: 'justify'\r\n//         }\r\n//     },\r\n//     tooltip: {\r\n//         valueSuffix: ' millions'\r\n//     },\r\n//     plotOptions: {\r\n//         bar: {\r\n//             dataLabels: {\r\n//                 enabled: true\r\n//             }\r\n//         }\r\n//     },\r\n//     legend: {\r\n//         layout: 'vertical',\r\n//         align: 'right',\r\n//         verticalAlign: 'top',\r\n//         x: -40,\r\n//         y: 80,\r\n//         floating: true,\r\n//         borderWidth: 1,\r\n//         backgroundColor:\r\n//             Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n//         shadow: true\r\n//     },\r\n//     credits: {\r\n//         enabled: false\r\n//     },\r\n//     series: [{\r\n//         name: 'Year 1800',\r\n//         data: graph_data.counts//[107, 31, 635, 203, 2]\r\n//     }]\r\n// };\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        Data : {}\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get(`http://127.0.0.1:2010/get_data`).then(res => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                Data : {\r\n                    chart: {\r\n                        type: 'bar'\r\n                    },\r\n                    title: {\r\n                        text: 'Historic World Population by Region'\r\n                    },\r\n                    subtitle: {\r\n                        text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\r\n                    },\r\n                    xAxis: {\r\n                        categories: res.data.labels,//['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\r\n                        title: {\r\n                            text: null\r\n                        }\r\n                    }, \r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: 'Population (millions)',\r\n                            align: 'high'\r\n                        },\r\n                        labels: {\r\n                            overflow: 'justify'\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        valueSuffix: ' millions'\r\n                    },\r\n                    plotOptions: {\r\n                        bar: {\r\n                            dataLabels: {\r\n                                enabled: true\r\n                            }\r\n                        }\r\n                    },\r\n                    legend: {\r\n                        layout: 'vertical',\r\n                        align: 'right',\r\n                        verticalAlign: 'top',\r\n                        x: -40,\r\n                        y: 80,\r\n                        floating: true,\r\n                        borderWidth: 1,\r\n                        backgroundColor:\r\n                            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n                        shadow: true\r\n                    },\r\n                    credits: {\r\n                        enabled: false\r\n                    },\r\n                    series: [{\r\n                        name: 'Year 1800',\r\n                        data: res.data.counts//[107, 31, 635, 203, 2]\r\n                    }]\r\n                }\r\n            })\r\n        });\r\n    } // end of componentMount\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1> This is a chart</h1>\r\n                <HighchartsReact highcharts={Highcharts} options={this.state.Data} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n//   const App = () => (\r\n//     <div>\r\n//       <HighchartsReact highcharts={Highcharts} options={options} />\r\n//     </div>\r\n//   );\r\n\r\n  render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}