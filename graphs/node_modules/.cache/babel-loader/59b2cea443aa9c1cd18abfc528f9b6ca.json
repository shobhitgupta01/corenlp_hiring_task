{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanisha\\\\Documents\\\\corenlp_hiring_task\\\\graphs\\\\src\\\\index.js\";\n\n/************************************************************************************************************************\r\n * Project  : Plot graph by getting data through Flask API\r\n * Author   : Shobhit Gupta\r\n * Date     : 1st May 2020\r\n ************************************************************************************************************************/\n// importing the libraries\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport axios from 'axios';\nvar graph_data = {\n  'labels': ['No Data'],\n  'counts': [0]\n}; // getting data from API\n\naxios.get(`http://127.0.0.1:2010/get_data`).then(res => {\n  console.log(res);\n  graph_data = res.data;\n});\nconsole.log(\"The data received is \" + graph_data); // setting up the chart options\n\nconst options = {\n  chart: {\n    type: 'bar'\n  },\n  title: {\n    text: 'Historic World Population by Region'\n  },\n  subtitle: {\n    text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\n  },\n  xAxis: {\n    categories: graph_data.labels,\n    //['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\n    title: {\n      text: null\n    }\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      text: 'Population (millions)',\n      align: 'high'\n    },\n    labels: {\n      overflow: 'justify'\n    }\n  },\n  tooltip: {\n    valueSuffix: ' millions'\n  },\n  plotOptions: {\n    bar: {\n      dataLabels: {\n        enabled: true\n      }\n    }\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'top',\n    x: -40,\n    y: 80,\n    floating: true,\n    borderWidth: 1,\n    backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\n    shadow: true\n  },\n  credits: {\n    enabled: false\n  },\n  series: [{\n    name: 'Year 1800',\n    data: graph_data.counts //[107, 31, 635, 203, 2]\n\n  }]\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Data: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:2010/get_data`).then(res => {\n      console.log(res);\n      this.setState({\n        labels: res.data.labels,\n        data: res.data.counts\n      });\n    });\n  }\n\n} //   const App = () => (\n//     <div>\n//       <HighchartsReact highcharts={Highcharts} options={options} />\n//     </div>\n//   );\n\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Tanisha/Documents/corenlp_hiring_task/graphs/src/index.js"],"names":["React","render","Highcharts","HighchartsReact","axios","graph_data","get","then","res","console","log","data","options","chart","type","title","text","subtitle","xAxis","categories","labels","yAxis","min","align","overflow","tooltip","valueSuffix","plotOptions","bar","dataLabels","enabled","legend","layout","verticalAlign","x","y","floating","borderWidth","backgroundColor","defaultOptions","shadow","credits","series","name","counts","App","Component","state","Data","componentDidMount","setState","document","getElementById"],"mappings":"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","sourcesContent":["/************************************************************************************************************************\r\n * Project  : Plot graph by getting data through Flask API\r\n * Author   : Shobhit Gupta\r\n * Date     : 1st May 2020\r\n ************************************************************************************************************************/\r\n\r\n // importing the libraries\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport axios from 'axios';\r\n\r\nvar graph_data = {'labels':['No Data'],'counts':[0]}\r\n\r\n// getting data from API\r\n\r\naxios.get(`http://127.0.0.1:2010/get_data`)\r\n      .then(res => {\r\n          console.log(res)\r\n        graph_data = res.data;\r\n        \r\n      })\r\n\r\nconsole.log(\"The data received is \"+graph_data)\r\n\r\n\r\n\r\n\r\n// setting up the chart options\r\nconst options = {\r\n    chart: {\r\n        type: 'bar'\r\n    },\r\n    title: {\r\n        text: 'Historic World Population by Region'\r\n    },\r\n    subtitle: {\r\n        text: 'Source: <a href=\"https://en.wikipedia.org/wiki/World_population\">Wikipedia.org</a>'\r\n    },\r\n    xAxis: {\r\n        categories: graph_data.labels,//['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\r\n        title: {\r\n            text: null\r\n        }\r\n    }, \r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'Population (millions)',\r\n            align: 'high'\r\n        },\r\n        labels: {\r\n            overflow: 'justify'\r\n        }\r\n    },\r\n    tooltip: {\r\n        valueSuffix: ' millions'\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            dataLabels: {\r\n                enabled: true\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'top',\r\n        x: -40,\r\n        y: 80,\r\n        floating: true,\r\n        borderWidth: 1,\r\n        backgroundColor:\r\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n        shadow: true\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    series: [{\r\n        name: 'Year 1800',\r\n        data: graph_data.counts//[107, 31, 635, 203, 2]\r\n    }]\r\n};\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        Data : {}\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get(`http://127.0.0.1:2010/get_data`).then(res => {\r\n            console.log(res);\r\n            this.setState({labels : res.data.labels, data : res.data.counts})\r\n        });\r\n    }\r\n\r\n}\r\n//   const App = () => (\r\n//     <div>\r\n//       <HighchartsReact highcharts={Highcharts} options={options} />\r\n//     </div>\r\n//   );\r\n\r\n  render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}